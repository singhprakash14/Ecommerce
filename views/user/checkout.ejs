<%- include('../partials/user-header')%>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

  <% if (stockCheck.length> 0) { %>
    <script>
      Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: 'Product(s) in the cart is out of stock',
        footer: '<a href="/cart">Click here to Decrease The Quantity?</a>',
        showConfirmButton: false,
        allowOutsideClick: false,
      }).then((result) => {
        if (result.isConfirmed) {
          window.location.href = "/cart";
        }
      });
    </script>
    <% } %>

      <main class="main">
        <div class="page-header breadcrumb-wrap">
          <div class="container">
            <div class="breadcrumb">
              <a href="/" rel="nofollow">Home</a>
              <span></span> Shop <span></span> Checkout
            </div>
          </div>
        </div>
        <section class="mt-50 mb-50">
          <div class="container">
            <div class="row">
              <div class="col-lg-6">
                <div class="toggle_info">
                  <span><i class="fi-rs-label mr-10"></i><span class="text-muted">Have a coupon?</span>
                    <a href="#coupon" data-bs-toggle="collapse" class="collapsed" aria-expanded="false">Click here to
                      enter your code</a></span>
                </div>
                <div class="panel-collapse collapse coupon_form" id="coupon">
                  <div class="panel-body">
                    <p class="mb-30 font-sm">
                      If you have a coupon code, please apply it below.
                    </p>
                    <form method="post" action="/coupon/redeem">
                      <div class="form-group">
                        <input type="text" placeholder="Enter Coupon Code..." name="couponCode" class="couponCode"/>
                      </div>
                      <div class="form-group">
                        <button class="btn btn-md" name="login">Apply Coupon</button>
                      </div>
                    </form>
                  </div>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-12">
                <div class="divider mt-50 mb-50"></div>
              </div>
            </div>
            <div class="row">
              <div class="col-md-6">
                <div class="mb-25">
                  <h4>Select You Address</h4>
                </div>
                <div class="col-lg-6">
                  <% if (userAddress) { %>
                    <% userAddress.address.forEach((address)=>
                      { %>
                      <div class="card mb-3 mb-lg-0">
                        <div class="card-header">
                          <input type="radio" name="address" id="<%= address._id %>" style="height: 1rem"
                            value="<%= address._id %>" class="selected-address" />
                          <h5 class="mb-0">
                            <%= address.addressType %>
                          </h5>
                        </div>
                        <div class="card-body">
                          <address>
                            <%= address.name %><br />
                              <%= address.city %>,<br />
                                <%= address.landMark %><br />
                                  <%= address.state %>
                          </address>
                          <p>
                            <%= address.pincode %>
                          </p>
                          <p>
                            <%= address.phone %>
                          </p>
                          <p>
                            <%= address.altPhone %>
                          </p>
                        </div>
                      </div>
                      <% }); %>
                        <% } else { %>
                          <div class="card mb-3 mb-lg-0">
                            <div class="card-header">
                              <h5 class="mb-0">No Address Found</h5>
                            </div>
                            <div class="card-body">
                              <address>
                                <a href="/address/add">Click Here to Add a new address</a>
                              </address>
                            </div>
                          </div>
                          <% } %>
                </div>
              </div>
              <div class="col-md-6">
                <div class="order_review">
                  <div class="mb-20">
                    <h4>Your Orders</h4>
                  </div>
                  <div class="table-responsive order_table text-center">
                    <table class="table">
                      <thead>
                        <tr>
                          <th colspan="2">Product</th>
                          <th>Total</th>
                        </tr>
                      </thead>
                      <tbody>
                        <%if(userCart){%>
                          <%userCart.products.forEach((product)=>{%>
                            <tr>
                              <td class="image product-thumbnail">
                                <img src="<%= product.productId.productImage[0].path%>" alt="#" />
                              </td>
                              <td>
                                <h5>
                                  <a href="/product?id=<%=product.productId._id%>">
                                    <%=product.productId.productName%>
                                  </a>
                                </h5>
                                <span class="product-qty">x <%=product.quantity%></span>
                              </td>
                              <td>₹<%=product.productId.salePrice*product.quantity%>
                              </td>
                            </tr>
                            <%})%>
                              <tr>
                                <th>SubTotal</th>
                                <td class="product-subtotal-td" colspan="2">
                                  ₹<span class="product-subtotal"><%=grandTotal%></span>
                                </td>
                              </tr>
                              <tr>
                                <th>Shipping</th>
                                <td colspan="2"><em>Free Shipping</em></td>
                              </tr>
                              <tr>
                                <th>Coupon Discount</th>
                                <td colspan="2" class="discount">
                                  ₹<span class="discount-price">0</span>
                                </td>
                              </tr>
                              <tr>
                                <th>Total</th>
                                <td colspan="2" class="grand-Total-td">
                                  <span class="font-xl text-brand fw-900">₹
                                  <span class="font-xl text-brand fw-900 grand-total"><%=grandTotal%></span></span>
                                </td>
                              </tr>

                              <%} else {%>
                                <tr>
                                  <h3>No product Found</h3>
                                </tr>
                                <%}%>
                      </tbody>
                    </table>
                  </div>
                  <div class="bt-1 border-color-1 d-flex justify-content-between">
                    <a href="/placeorder/cod" class="btn btn-fill-out btn-block place-order-cod">Place Order ( COD )</a>
                    <a href="" class="btn btn-fill-out btn-block  place-order-online" id="rzp-button1">Online
                      Payement</a>
                      <a href="/placeorder/wallet" class="btn btn-fill-out btn-block place-order-wallet">Place Order ( Wallet )</a>
                  </div>
                </div>
              </div>
            </div>
        </section>
      </main>

      <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
      <script>
        document.addEventListener("DOMContentLoaded", function () {


          // Redeem Coupon
          const productSubtotalField = document.querySelector('.product-subtotal');
          const discountPriceField = document.querySelector('.discount-price');
          const grandTotalfield = document.querySelector('.grand-total') 

          const couponForm = document.querySelector('form[action="/coupon/redeem"]');
          couponForm.addEventListener("submit", (event) => {
            event.preventDefault();

            const couponCode = document.querySelector('.couponCode').value.trim();
            if( !couponCode ) {
              alert('Enter Coupon Code to Redeem.')
              return;
            }
            fetch('/coupon/redeem',{
              method : "POST",
              headers : {
                "Content-Type" : "application/json"
              },
              body : JSON.stringify({ couponCode : couponCode }) 
            })
            .then((response) => {
              if (!response.ok) {
                return response.text().then((errorMessage) => {              
                  const message = JSON.parse(errorMessage);
                  alert(message.data);
                  throw new Error('Network response was not ok');
                });
              }
              return response.json(); 
            })
            .then((data)=>{
              if(Number(productSubtotalField.textContent >= data.coupon.minimumPurchase)){
                alert("Coupon Availed")
                discountPriceField.innerHTML = data.coupon.amount;
                grandTotalfield.innerHTML = Number(productSubtotalField.textContent) - Number(discountPriceField.textContent)
              } else {
                alert(`To avail this coupon the purchase need to be above ${data.coupon.minimumPurchase}`)
              }
            })
          })

          //Place Order COD
          document.querySelector(".place-order-cod").addEventListener("click", (event) => {
            event.preventDefault();

            const couponCode = document.querySelector('.couponCode').value.trim();
            const grandTotal = document.querySelector('.grand-total').textContent 
            const selectedAddressRadioButtons = document.querySelectorAll(".selected-address");
            let selectedAddressValue = null;
            for (const radioButton of selectedAddressRadioButtons) {
              if (radioButton.checked) {
                selectedAddressValue = radioButton.value;
                window.location.href = `/placeorder/cod?addressId=${selectedAddressValue}&couponCode=${couponCode}&grantTotal=${grandTotal}`
                break;
              }
            }
            if (selectedAddressValue !== null) {
              console.log("Selected Address ID:", selectedAddressValue);
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'No Address is Selected!',
                footer: '<a href="">Why do I have this issue?</a>'
              })
            }

          });

          //Place Order Wallet
          document.querySelector(".place-order-wallet").addEventListener("click", (event) => {
            event.preventDefault();

            const couponCode = document.querySelector('.couponCode').value.trim();
            const grandTotal = document.querySelector('.grand-total').textContent 
            const selectedAddressRadioButtons = document.querySelectorAll(".selected-address");
            let selectedAddressValue = null;
            for (const radioButton of selectedAddressRadioButtons) {
              if (radioButton.checked) {
                selectedAddressValue = radioButton.value;
                fetch(`/placeorder/wallet?addressId=${selectedAddressValue}&couponCode=${couponCode}&grantTotal=${grandTotal}`)
  .then((response) => {
    if (!response.ok) {
      throw new Error("Insufficient Balance");
    }
    return response.json();
  })
  .then((data) => {
    alert(data.data);
    window.location.href="/profile"
  })
  .catch((error) => {
    alert(error.message);
  });

              }
            }
            if (selectedAddressValue !== null) {
              console.log("Selected Address ID:", selectedAddressValue);
            } else {
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'No Address is Selected!',
                footer: '<a href="">Why do I have this issue?</a>'
              })
            }

          });


          // Place Order Razorpay
          document.querySelector('.place-order-online').addEventListener('click', (event) => {
            event.preventDefault();
            const selectedAddressRadioButtons = document.querySelectorAll(".selected-address");
            const grandTotal = document.querySelector('.grand-total').textContent 
            const couponCode = document.querySelector('.couponCode').value
            let selectedAddressValue = null;

            for (const radioButton of selectedAddressRadioButtons) {
              if (radioButton.checked) {
                selectedAddressValue = radioButton.value;

                fetch(`/placeorder/online?addressId=${selectedAddressValue}&grantTotal=${grandTotal}&couponCode=${couponCode}`, {
                  method: 'GET',
                })
                  .then((response) => {
                    if (!response.ok) {
                      throw new Error('Network response was not ok');
                    }
                    return response.json(); 
                  })
                  .then((data) => {

                    var order_id = data.order_id;
                    // Initialize the Razorpay payment with the order_id
                    var options = {
                      key: "rzp_test_DmCx0P7qXl1rlz", 
                      order_id: data.order_id, 
                      handler: function (response) {
                        console.log(response);
                          // Payment successful
                          handlePaymentSuccess(data.order_id, response, couponCode);
                      },
                    };
                    var rzp1 = new Razorpay(options);
                    rzp1.open();
                    rzp1.on('payment.failed', function (response){
                          console.log('Payement Failed');
                          // alert(response.error.code);
                          // alert(response.error.description);
                          // alert(response.error.source);
                          // alert(response.error.step);
                          // alert(response.error.reason);
                          // alert(response.error.metadata.order_id);
                          // alert(response.error.metadata.payment_id);
                          handlePaymentFailure(order_id, response, couponCode)
                      })
                  })
                  .catch((error) => {
                    console.error('Fetch error:', error);
                    Swal.fire({
                      icon: 'error',
                      title: 'Oops...',
                      text: 'Failed to initiate the payment!',
                      footer: '<a href="">Why do I have this issue?</a>'
                    });

                    // Payment initiation failed
                    handlePaymentFailure(null, null);
                  });

                // Display a message while waiting for the response
                Swal.fire({
                  title: "Online",
                  text: "Processing the payment...",
                });

                break;
              }
            }

            if (selectedAddressValue === null) {
              Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'No Address is Selected!',
                footer: '<a href="">Why do I have this issue?</a>'
              });

              // Payment failed due to no address selection
              handlePaymentFailure(null, null);
            }
          });

          // Function to handle payment success
          function handlePaymentSuccess(order_id, response, couponCode) {
            // alert(response.razorpay_payment_id);
            // alert(response.razorpay_order_id);
            // alert(response.razorpay_signature);
            // alert("Payment Successful");
            updatePaymentStatus("Success", order_id, response, couponCode);
            window.location.href = '/profile'; // Redirect after successful payment
          }

          // Function to handle payment failure
          function handlePaymentFailure(order_id, response, couponCode) {
            updatePaymentStatus("Failure", order_id, response, couponCode);

          }

          // Function to update the payment status in the database
          function updatePaymentStatus(paymentStatus, order_id, payementResponse, couponCode) {
            const url = `/updatePaymentStatus?paymentStatus=${paymentStatus}&orderId=${order_id}&response=${JSON.stringify(payementResponse)}&couponCode=${couponCode}`;

            fetch(url, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
            })
              .then((response) => {
                if (!response.ok) {
                  throw new Error('Failed to update payment status');
                }
                // Handle success response if needed
              })
              .catch((error) => {
                console.error('Failed to update payment status:', error);
              });
          }
        })

      </script>
      <%-include('../partials/user-footer')%>